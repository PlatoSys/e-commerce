{"version":3,"file":"static/js/144.25c45a6e.chunk.js","mappings":"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","sources":["actions/productActions.js","components/Message.js","components/Rating.js","screens/ProductScreen.js"],"sourcesContent":["import * as actionTypes from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nexport const listProducts =\n  (keyword = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: actionTypes.PRODUCT_LIST_REQUEST });\n      const { data } = await axios.get(`/api/products/${keyword}`);\n      dispatch({ type: actionTypes.PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: actionTypes.PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/products/${id}`);\n    dispatch({ type: actionTypes.PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.PRODUCT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/product/${id}/`, config);\n\n    dispatch({\n      type: actionTypes.PRODUCT_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/product/${0}/`, {}, config);\n\n    dispatch({\n      type: actionTypes.PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/product/${product._id}/`,\n      product,\n      config\n    );\n\n    dispatch({\n      type: actionTypes.PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: actionTypes.PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.PRODUCT_CREATE_REVIEW_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/products/${productId}/reviews/`,\n        review,\n        config\n      );\n\n      dispatch({\n        type: actionTypes.PRODUCT_CREATE_REVIEW_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: actionTypes.PRODUCT_TOP_REQUEST });\n    const { data } = await axios.get(`/api/products/top/`);\n    dispatch({ type: actionTypes.PRODUCT_TOP_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nfunction Message({ variant, children }) {\n  return <Alert variant={variant}>{children}</Alert>;\n}\n\nexport default Message;\n","import React from \"react\";\n\nfunction Rating({ value, text, color }) {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  );\n}\n\nexport default Rating;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  Form,\n  FormGroup,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { useMatch, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nfunction ProductScreen() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const match = useMatch(\"/products/:id\");\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { error, loading, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = productReviewCreate;\n\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match.params.id, successProductReview, errorProductReview]);\n\n  const addToCartHandler = () => {\n    navigate(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n  return (\n    <React.Fragment>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>{product.name}</ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                    color={\"#f8e825\"}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col xs={\"auto\"} className=\"my-1\">\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1}>{x + 1}</option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Button\n                        disabled={product.countInStock === 0}\n                        className=\"btn-block\"\n                        type=\"button\"\n                        onClick={addToCartHandler}\n                      >\n                        Add To Cart\n                      </Button>\n                    </Row>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h4>Reviews</h4>\n              {product.reviews.length === 0 && (\n                <Message variant=\"info\">No reviews</Message>\n              )}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} color=\"#f8e825\" />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n\n                <ListGroup.Item>\n                  <h4>Write a review</h4>\n                  {loadingProductReview && <Loader />}\n                  {successProductReview && (\n                    <Message variant=\"success\">Review Submitted</Message>\n                  )}\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excelent</option>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <FormGroup controlId=\"comment\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"5\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </FormGroup>\n\n                      <Button\n                        disabled={loadingProductReview}\n                        type=\"submit\"\n                        className=\"my-3\"\n                        variant=\"primary\"\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant=\"info\">\n                      Please <Link to=\"/login\">Log In</Link> tto write review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default ProductScreen;\n"],"names":["listProducts","keyword","dispatch","type","actionTypes","axios","data","payload","response","detail","message","listProductDetails","id","deleteProduct","getState","userInfo","userLogin","config","headers","Authorization","token","createProduct","updateProduct","product","_id","createProductReview","productId","review","listTopProducts","variant","children","value","text","color","className","style","navigate","useNavigate","useDispatch","match","useMatch","productDetails","useSelector","state","error","loading","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","useState","qty","setQty","rating","setRating","comment","setComment","useEffect","PRODUCT_CREATE_REVIEW_RESET","params","Link","to","md","src","image","alt","name","fluid","numReviews","price","description","countInStock","xs","as","onChange","e","target","Array","keys","map","x","disabled","onClick","reviews","length","createdAt","substring","onSubmit","preventDefault","controlId","row"],"sourceRoot":""}