{"version":3,"file":"static/js/529.839ee5ca.chunk.js","mappings":"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","sources":["actions/cartActions.js","components/Message.js","screens/CartScreen.js"],"sourcesContent":["import axios from \"axios\";\r\nimport * as actionTypes from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: actionTypes.CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty: parseInt(qty),\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: actionTypes.CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nfunction Message({ variant, children }) {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n}\r\n\r\nexport default Message;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useMatch, useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction CartScreen() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const qty = searchParams.get(\"qty\");\r\n\r\n  const match = useMatch(\"/cart/:id\");\r\n  const productId = match ? match.params.id : null;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    navigate(`/shipping`);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col md={8}>\r\n          <h1>Shopping Cart</h1>\r\n          {cartItems.length === 0 ? (\r\n            <Message variant=\"info\">\r\n              Your Cart is Empty <Link to=\"/\">Go Back</Link>\r\n            </Message>\r\n          ) : (\r\n            <ListGroup variant=\"flush\">\r\n              {cartItems.map((item) => (\r\n                <ListGroup.Item key={item.product}>\r\n                  <Row>\r\n                    <Col md={2}>\r\n                      <Image src={item.image} alt={item.name} fluid rounded />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                    </Col>\r\n                    <Col md={2}>${item.price}</Col>\r\n                    <Col md={3}>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={item.qty}\r\n                        onChange={(e) =>\r\n                          dispatch(addToCart(item.product, e.target.value))\r\n                        }\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                          <option key={x + 1}>{x + 1}</option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col md={1}>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"light\"\r\n                        onClick={() => removeFromCartHandler(item.product)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>\r\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}\r\n                  ) items\r\n                </h2>\r\n                $\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                  .toFixed(2)}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"w-100\"\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  Proceed to Checkout\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n"],"names":["addToCart","id","qty","dispatch","getState","axios","data","type","actionTypes","payload","product","_id","name","image","price","countInStock","parseInt","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod","variant","children","useDispatch","navigate","useNavigate","useSearchParams","get","match","useMatch","productId","params","useSelector","state","useEffect","md","length","Link","to","map","item","src","alt","fluid","rounded","as","value","onChange","e","target","Array","keys","x","onClick","className","reduce","acc","toFixed","disabled"],"sourceRoot":""}