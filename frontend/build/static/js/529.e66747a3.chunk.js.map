{"version":3,"file":"static/js/529.e66747a3.chunk.js","mappings":"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","sources":["actions/cartActions.js","components/Message.js","screens/CartScreen.js"],"sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"../constants/cartConstants\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: actionTypes.CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty: parseInt(qty),\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nfunction Message({ variant, children }) {\n  return <Alert variant={variant}>{children}</Alert>;\n}\n\nexport default Message;\n","import React, { useEffect } from \"react\";\nimport { Link, useMatch, useSearchParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nfunction CartScreen() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [searchParams] = useSearchParams();\n  const qty = searchParams.get(\"qty\");\n\n  const match = useMatch(\"/cart/:id\");\n  const productId = match ? match.params.id : null;\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    navigate(`/shipping`);\n  };\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Col md={8}>\n          <h1>Shopping Cart</h1>\n          {cartItems.length === 0 ? (\n            <Message variant=\"info\">\n              Your Cart is Empty <Link to=\"/\">Go Back</Link>\n            </Message>\n          ) : (\n            <ListGroup variant=\"flush\">\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={2}>\n                      <Image className=\"lazyload\"  src={item.image} alt={item.name} fluid rounded />\n                    </Col>\n                    <Col md={3}>\n                      <Link to={`/products/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    <Col md={2}>${item.price}</Col>\n                    <Col md={3}>\n                      <Form.Control\n                        as=\"select\"\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(addToCart(item.product, e.target.value))\n                        }\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <option key={x + 1}>{x + 1}</option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={1}>\n                      <Button\n                        type=\"button\"\n                        variant=\"light\"\n                        onClick={() => removeFromCartHandler(item.product)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}\n                  ) items\n                </h2>\n                $\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toFixed(2)}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"w-100\"\n                  disabled={cartItems.length === 0}\n                  onClick={checkoutHandler}\n                >\n                  Proceed to Checkout\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default CartScreen;\n"],"names":["addToCart","id","qty","dispatch","getState","axios","data","type","actionTypes","payload","product","_id","name","image","price","countInStock","parseInt","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod","variant","children","useDispatch","navigate","useNavigate","useSearchParams","get","match","useMatch","productId","params","useSelector","state","useEffect","md","length","Link","to","map","item","className","src","alt","fluid","rounded","as","value","onChange","e","target","Array","keys","x","onClick","reduce","acc","toFixed","disabled"],"sourceRoot":""}